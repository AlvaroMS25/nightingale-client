var searchIndex = JSON.parse('{\
"nightingale_client":{"doc":"","t":"DLLALLAALLLLLLALALLAALLAALLLLLDDLLLLLLLMLLLLMLLMMMMLLLLLLLMLLNENDNLLLLLLLLLLLLLLLLLLLLLLLLLLILLLLLLLAAAAAADLLLLLLLMLLLLLAAAAEDNDNNLLLLLLLLLMLLLLLLLLLMMMLLLLLLLLLLLLDLLLLLLMMLLLLDLLLLLLMMMLLLLNDDNNELLLLLLMMLLLLLLLLLMMLLLMMMMLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLDLLMMLLMLMMLLLMLADDMLLLLLLLLLLMMMMMMLLLLLLMMLLDMMLLMLLLLLMLLLMMMLMLLLLDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDILLLLKKLLLLDDIQIIQDLLLLLLLLLLLLKLKLLLLLLLLLLKLLLLL","n":["NightingaleClient","borrow","borrow_mut","config","connect","disconnect","error","events","from","get_player","get_player_mut","into","join","leave","model","new_serenity","player","playlist","reconnect","reference","rest","rest","search","serenity_ext","source","try_from","try_into","type_id","voice_manager","vzip","Config","SessionConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_storage","connection_attempts","default","default","from","from","host","into","into","password","port","shards","ssl","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","ErrorMessage","HttpError","Reqwest","StatusCodeError","UnexpectedStatus","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EventHandler","on_gateway_connect","on_gateway_disconnect","on_gateway_reconnect","on_ready","on_track_end","on_track_errored","on_track_start","error","gateway","info","player","search","track","ErrorResponse","borrow","borrow_mut","deserialize","fmt","fmt","from","into","message","to_string","try_from","try_into","type_id","vzip","event","forward","ready","state","Event","TrackEnd","TrackEnd","TrackErrored","TrackErrored","TrackStart","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","error","fmt","fmt","fmt","from","from","from","into","into","into","stopped","track","track","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Forward","borrow","borrow_mut","deserialize","fmt","from","into","payload","shard","try_from","try_into","type_id","vzip","Ready","borrow","borrow_mut","deserialize","fmt","from","into","players","resumed","session","try_from","try_into","type_id","vzip","ConnectGateway","ConnectionData","DisconnectData","DisconnectGateway","ReconnectGateway","UpdateState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","deserialize","deserialize","deserialize","fmt","fmt","fmt","from","from","from","guild_id","guild_id","into","into","into","server","session_id","session_id","ssrc","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CoreInfo","CpuInfo","Info","MemoryInfo","PlaybackInfo","SystemInfo","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cores","cpu","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","frequency","from","from","from","from","from","from","into","into","into","into","into","into","memory","memory","playback","players","playing","process_usage","system","total_usage","total_usage","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","virtual_memory","vzip","vzip","vzip","vzip","vzip","vzip","PlayerInfo","borrow","borrow_mut","channel_id","currently_playing","deserialize","from","guild_id","into","paused","queue","try_from","try_into","type_id","volume","vzip","youtube","YoutubePlaylist","YoutubeTrack","author","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","from","from","into","into","is_stream","length","name","thumbnail","title","tracks","try_from","try_from","try_into","try_into","type_id","type_id","url","video_id","vzip","vzip","Track","album","artist","borrow","borrow_mut","channel","clone","clone_into","clone_storage","clone_storage","deserialize","duration","fmt","from","into","source_url","thumbnail","title","to_owned","track","try_from","try_into","type_id","vzip","Player","borrow","borrow_mut","current","data","enqueue","force_play","from","info","into","pause","queue","resume","set_volume","try_from","try_into","type_id","vzip","Reference","ReferenceMut","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","from","from","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RestClient","borrow","borrow_mut","clone","clone_into","clone_storage","from","into","playlist","search","server_info","to_owned","try_from","try_into","type_id","vzip","NightingaleKey","SerenityExt","borrow","borrow_mut","from","into","register_nightingale","register_nightingale_from_instance","try_from","try_into","type_id","vzip","Bytes","Link","PlaySource","Playlist","SearchRoute","SearchSource","Track","Youtube","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","playlist","playlist","track","track","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_for","value_for","value_for","vzip","vzip","vzip"],"q":[[0,"nightingale_client"],[30,"nightingale_client::config"],[61,"nightingale_client::error"],[92,"nightingale_client::events"],[100,"nightingale_client::model"],[106,"nightingale_client::model::error"],[120,"nightingale_client::model::gateway"],[124,"nightingale_client::model::gateway::event"],[164,"nightingale_client::model::gateway::forward"],[177,"nightingale_client::model::gateway::ready"],[191,"nightingale_client::model::gateway::state"],[235,"nightingale_client::model::info"],[314,"nightingale_client::model::player"],[330,"nightingale_client::model::search"],[331,"nightingale_client::model::search::youtube"],[360,"nightingale_client::model::track"],[384,"nightingale_client::player"],[402,"nightingale_client::reference"],[425,"nightingale_client::rest"],[441,"nightingale_client::serenity_ext"],[453,"nightingale_client::source"],[492,"tungstenite::error"],[493,"core::result"],[494,"core::option"],[495,"core::num::nonzero"],[496,"core::convert"],[497,"alloc::string"],[498,"alloc::vec"],[499,"core::any"],[500,"serenity::gateway::bridge::voice"],[501,"alloc::sync"],[502,"typemap_rev"],[503,"alloc::boxed"],[504,"core::fmt"],[505,"core::fmt"],[506,"core::error"],[507,"core::future::future"],[508,"core::pin"],[509,"serde::de"],[510,"typemap_rev"],[511,"dashmap::mapref::one"]],"d":["Client that handles a single connection to a nightingale …","","","","Connects to the server.","Disconnects from the server.","","","Returns the argument unchanged.","Returns a reference to the player of the provided guild, …","Returns a mutable reference to the player of the provided …","Calls <code>U::from(self)</code>.","Joins the given voice channel.","Leaves the given voice channel.","","Creates a new instance to be used with serenity.","","Gets the playlist items from the specified source.","Reconnects to the server.","","","","Makes a search on the provided source.","","","","","","Returns a voice manager to be used with …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Errors that can be returned from making HTTP requests.","","Error status code returned from the server.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Trait defining what events can be fired from the server.","Triggered when the server connects to a voice channel.","Triggered when the server disconnects or gets disconnected …","Triggered when the server reconnects to a voice channel …","Triggered after connecting to the server.","Triggered when a track finished its playback.","Triggered when a track encountered an error when trying to …","Triggered when a track has started its playback.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Track related events received from the gateway.","Event fired when a track finishes its playback.","A track ended playing, either by skipping or naturally …","Event fired when a track had an error.","A track had an error while playing or trying to play,","A track has started playing,","","","","","","","","","","The error that occurred.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether if the track was stopped manually.","The track itself.","The track itself.","","","","","","","","","","","","","The forward event, fired when nightingale requests a …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The payload that should be forwarded","The shard that should forward the payload.","","","","","The ready event, fired when a new connection is established","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Players present in this session, this field is <code>Some</code> only …","Whether if the session was resumed or not.","The session id itself.","","","","","The server has connected to a voice channel.","The data about the connection","","The server has been disconnected from a voice channel, …","The server has reconnected to a voice channel after a …","Voice update state related events.","","","","","","","Channel id the server is connected to.","The channel id the server disconnected from.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Guild id the server is connected to.","The guild id the server disconnected from.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The server nightingale is connected to.","The session id of the connection.","The session id of the previous connection.","The ssrc of the connection.","","","","","","","","","","","","","","","Information object returned from the <code>info</code> route.","","","","","","","","","","","","","","","","Per-core information.","Cpu information.","","","","","","","","","","","","","Core frequency in MHz.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Memory information.","Memory usage (RSS) in bytes.","Playback information.","Number of existing players.","Number of players currently playing.","Cpu usage from <code>nightingale</code>","System information.","Total cpu usage.","Total usage of the core.","","","","","","","","","","","","","","","","","","","Virtual memory in bytes.","","","","","","","Serializable player object returned from the player info …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Author of the track if available.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether if the video is a stream.","Length of the track in milliseconds.","Name of the playlist.","The thumbnail of the video.","Title of the track.","Tracks of the playlist.","","","","","","","The url of the video.","Id of the video.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A player assigned to a guild.","","","Returns the track that is currently being played, if …","Returns the inner type map held by the player.","Enqueues the provided track to be played.","Pauses the currently playing track and forces the provided …","Returns the argument unchanged.","Gets the information held by the server about the player.","Calls <code>U::from(self)</code>.","Pauses the playback if possible.","Returns the queue of the player.","Resumes the playback if possible.","Sets a new volume, the default value is 100.","","","","","A shared reference to a resource.","An exclusive reference to a resource.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Queries the playlist items, returning them and the …","Searches from the specified source, returning a vector of …","Returns information about the server. If <code>current_session</code> …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Registers a new instance of the client into the client’s …","Registers an existing instance into the client’s typemap","","","","","","","Represents sources that can actually be played from.","The playlist returned from playlist calls.","Represents the routes of the different search sources.","Represents a source that can be used to search and query …","The track type returned from search calls.","Youtube source.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the route to search <code>playlist</code> with this route.","","Returns the route to search <code>query</code> with this source.","","","","","","","","","","","Returns the json payload to play from the specified …","","","","",""],"i":[0,1,1,0,1,1,0,0,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,0,0,1,1,1,1,1,0,0,23,12,23,12,12,12,12,12,23,12,23,12,12,23,12,12,12,12,12,12,23,12,23,12,23,12,12,23,12,11,0,11,0,11,24,11,24,11,24,24,11,11,24,11,11,11,11,24,11,11,24,11,24,11,24,11,24,11,24,11,0,13,13,13,13,13,13,13,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,39,0,39,39,39,36,35,39,36,35,39,36,35,36,39,36,35,39,36,35,39,36,35,35,36,35,39,36,35,39,36,35,39,36,35,39,36,35,0,40,40,40,40,40,40,40,40,40,40,40,40,0,34,34,34,34,34,34,34,34,34,34,34,34,34,41,0,0,41,41,0,41,30,33,41,30,33,30,33,41,30,33,41,30,33,41,30,33,30,33,41,30,33,30,30,33,30,41,30,33,41,30,33,41,30,33,41,30,33,0,0,0,0,0,0,42,43,44,45,46,47,42,43,44,45,46,47,44,43,42,43,44,45,46,47,42,43,44,45,46,47,45,42,43,44,45,46,47,42,43,44,45,46,47,43,46,42,47,47,44,42,44,45,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,46,42,43,44,45,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,50,49,50,49,50,49,50,49,50,49,50,50,50,49,50,50,49,49,50,49,50,49,50,50,50,49,50,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,10,6,10,6,10,10,6,6,10,10,6,10,6,10,6,10,6,10,6,10,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,62,62,62,62,63,63,62,62,62,62,0,0,0,15,0,0,15,0,64,60,61,64,60,61,64,60,61,64,60,61,65,64,65,64,64,60,61,64,60,61,64,60,61,53,60,61,64,60,61],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,[[4,[2,3]]]],[1,2],0,0,[-1,-1,[]],[[1,-1],[[7,[[6,[5]]]]],[[9,[8]]]],[[1,-1],[[7,[[10,[5]]]]],[[9,[8]]]],[-1,-2,[],[]],[[1,-1,-2],[[4,[2,11]]],[[9,[8]]],[[9,[8]]]],[[1,-1],[[4,[2,11]]],[[9,[8]]]],0,[[12,-1],1,13],0,[[1,14,-1],[[4,[11]]],15],[1,[[4,[2,3]]]],0,0,[1,16],[[1,14,-1],[[4,[17,11]]],15],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[1,[[20,[19]]]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,12],[[-1,-2],2,[],[]],[-1,[[22,[21]]],[]],0,[[],23],[[],12],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,25],26],[[24,25],26],[[11,25],26],[[11,25],26],[-1,-1,[]],[24,11],[-1,-1,[]],[27,11],[28,11],[-1,-2,[],[]],[-1,-2,[],[]],[11,[[7,[29]]]],[-1,14,[]],[-1,14,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,30],[[32,[[22,[31]]]]],[]],[[-1,33],[[32,[[22,[31]]]]],[]],[[-1,30],[[32,[[22,[31]]]]],[]],[[-1,34],[[32,[[22,[31]]]]],[]],[[-1,5,35],[[32,[[22,[31]]]]],[]],[[-1,5,36],[[32,[[22,[31]]]]],[]],[[-1,5,37],[[32,[[22,[31]]]]],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[28]]],38],[[28,25],26],[[28,25],26],[-1,-1,[]],[-1,-2,[],[]],0,[-1,14,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[39]]],38],[-1,[[4,[36]]],38],[-1,[[4,[35]]],38],0,[[39,25],26],[[36,25],26],[[35,25],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[40]]],38],[[40,25],26],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[34]]],38],[[34,25],26],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[4,[41]]],38],[-1,[[4,[30]]],38],[-1,[[4,[33]]],38],[[41,25],26],[[30,25],26],[[33,25],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[4,[42]]],38],[-1,[[4,[43]]],38],[-1,[[4,[44]]],38],[-1,[[4,[45]]],38],[-1,[[4,[46]]],38],[-1,[[4,[47]]],38],[[42,25],26],[[43,25],26],[[44,25],26],[[45,25],26],[[46,25],26],[[47,25],26],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[4,[48]]],38],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[49]]],38],[-1,[[4,[50]]],38],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[37,37],[[-1,-2],2,[],[]],[-1,[[22,[51]]],[]],[-1,[[22,[21]]],[]],[-1,[[4,[37]]],38],0,[[37,25],26],[-1,-1,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[5,[[7,[37]]]],[5,52],[[5,-1],[[4,[37,11]]],53],[[5,-1],[[4,[37,11]]],53],[-1,-1,[]],[5,[[4,[48,11]]]],[-1,-2,[],[]],[5,[[4,[2,11]]]],[5,[[17,[37]]]],[5,[[4,[2,11]]]],[[5,54],[[4,[2,11]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[],[]],[[[10,[-1]]],[],[]],[[[10,[-1]]],[],[]],[[[56,[55,-1]]],[[6,[-1]]],[]],[-1,-1,[]],[[[57,[55,-1]]],[[10,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],2,[],[]],[-1,[[22,[21]]],[]],[-1,-1,[]],[-1,-2,[],[]],[[16,14,-1],[[4,[11]]],15],[[16,14,-1],[[4,[17,11]]],15],[[16,58],[[4,[42,11]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,12,-2],-1,[],13],[[-1,1],-1,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[14,14],[14,14],[14,14],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,59,[]],[60,59],[61,59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"NightingaleClient",0],[15,"tuple"],[4,"Error",492],[4,"Result",493],[3,"Player",384],[3,"Reference",402],[4,"Option",494],[3,"NonZeroU64",495],[8,"Into",496],[3,"ReferenceMut",402],[4,"HttpError",61],[3,"Config",30],[8,"EventHandler",92],[3,"String",497],[8,"SearchSource",453],[3,"RestClient",425],[3,"Vec",498],[3,"TypeId",499],[8,"VoiceGatewayManager",500],[3,"Arc",501],[8,"CloneableStorage",502],[3,"Box",503],[3,"SessionConfig",30],[3,"StatusCodeError",61],[3,"Formatter",504],[6,"Result",504],[3,"Error",505],[3,"ErrorResponse",106],[8,"Error",506],[3,"ConnectionData",191],[8,"Future",507],[3,"Pin",508],[3,"DisconnectData",191],[3,"Ready",177],[3,"TrackEnd",124],[3,"TrackErrored",124],[3,"Track",360],[8,"Deserializer",509],[4,"Event",124],[3,"Forward",164],[4,"UpdateState",191],[3,"Info",235],[3,"SystemInfo",235],[3,"CpuInfo",235],[3,"CoreInfo",235],[3,"MemoryInfo",235],[3,"PlaybackInfo",235],[3,"PlayerInfo",314],[3,"YoutubePlaylist",331],[3,"YoutubeTrack",331],[8,"CloneDebuggableStorage",502],[3,"TypeMap",502],[8,"PlaySource",453],[15,"u8"],[15,"u64"],[3,"Ref",510],[3,"RefMut",510],[15,"bool"],[4,"Value",511],[3,"Link",453],[3,"Bytes",453],[3,"NightingaleKey",441],[8,"SerenityExt",441],[3,"Youtube",453],[8,"SearchRoute",453]],"b":[[70,"impl-Debug-for-StatusCodeError"],[71,"impl-Display-for-StatusCodeError"],[72,"impl-Display-for-HttpError"],[73,"impl-Debug-for-HttpError"],[75,"impl-From%3CStatusCodeError%3E-for-HttpError"],[77,"impl-From%3CError%3E-for-HttpError"],[78,"impl-From%3CErrorResponse%3E-for-HttpError"],[110,"impl-Debug-for-ErrorResponse"],[111,"impl-Display-for-ErrorResponse"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
